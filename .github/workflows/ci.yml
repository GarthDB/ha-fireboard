name: CI

# Home Assistant custom component CI workflow
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libffi-dev libssl-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade "setuptools>=68.0.0" wheel
        pip install -r requirements-test.txt

    - name: Lint with flake8
      run: |
        flake8 custom_components/fireboard tests/ || true

    - name: Check formatting with black
      run: |
        black --check custom_components/fireboard tests/ || true

    - name: Check import sorting with isort
      run: |
        isort --check-only custom_components/fireboard tests/ || true

    - name: Security check with bandit
      run: |
        bandit -r custom_components/fireboard/ -f json -o bandit-report.json || true

    - name: Security check with safety
      run: |
        safety check --output json || true

    - name: Dead code check with vulture
      run: |
        vulture custom_components/fireboard/ --min-confidence 80 || true

    - name: Test with pytest
      run: |
        pytest tests/ --cov=custom_components/fireboard --cov-report=xml --cov-report=html --cov-fail-under=80 --tb=short

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        token: ${{ secrets.CODECOV_TOKEN }}

  hassfest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: home-assistant/actions/hassfest@master

